---
openapi: 3.0.4
info:
  title: HwlPortal.WebApi
  version: '1.0'
paths:
  "/api/auth/register":
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/register-hwl":
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RegisterModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/login":
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/refresh-token":
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/TokenModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TokenModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/revoke/{username}":
    post:
      tags:
        - auth
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/revoke-all":
    post:
      tags:
        - auth
      responses:
        '204':
          description: No Content
  "/api/auth/roles/add-hwl/{username}":
    post:
      tags:
        - auth
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/roles/remove-hwl/{username}":
    post:
      tags:
        - auth
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/roles/add-webdeveloper/{username}":
    post:
      tags:
        - auth
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/auth/roles/remove-webdeveloper/{username}":
    post:
      tags:
        - auth
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Response"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings":
    get:
      tags:
        - pricings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
    post:
      tags:
        - pricings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
    put:
      tags:
        - pricings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PricingPostModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/{id}":
    get:
      tags:
        - pricings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/dictionaries/countries":
    get:
      tags:
        - pricings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Countries"
  "/api/pricings/dictionaries/additions":
    get:
      tags:
        - pricings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Additions"
  "/api/pricings/dictionaries/services":
    get:
      tags:
        - pricings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Services"
  "/api/pricings/dictionaries/statuses":
    get:
      tags:
        - pricings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Statuses"
  "/api/pricings/archive":
    get:
      tags:
        - pricings
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Pricing"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/copy/{id}":
    post:
      tags:
        - pricings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/approve/{id}":
    post:
      tags:
        - pricings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/reject":
    post:
      tags:
        - pricings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RejectModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RejectModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RejectModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Pricing"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/sendorder/{id}":
    get:
      tags:
        - pricings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SlOrderModel"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
  "/api/pricings/sendorder":
    post:
      tags:
        - pricings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SlOrderModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SlOrderModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SlOrderModel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
components:
  schemas:
    Additions:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    Countries:
      type: object
      properties:
        id:
          type: integer
          format: int32
        country:
          type: string
          nullable: true
      additionalProperties: false
    LoginModel:
      required:
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    Pricing:
      required:
        - deliveryCountry
        - deliveryZipCode
        - receiptZipCode
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        guid:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        additionalService:
          type: integer
          format: int32
          nullable: true
        additionalServicePrice:
          type: number
          format: double
          nullable: true
        adr:
          type: boolean
          nullable: true
        adrPrice:
          type: number
          format: double
          nullable: true
        allIn:
          type: number
          format: double
          nullable: true
        comments:
          type: string
          nullable: true
        insurance:
          type: boolean
          nullable: true
        insuranceCurrency:
          maxLength: 4
          minLength: 0
          type: string
          nullable: true
        insurancePrice:
          type: number
          format: double
          nullable: true
        insuranceValue:
          type: number
          format: double
          nullable: true
        shippingPrice:
          type: number
          format: double
          nullable: true
        ttTime:
          type: string
          nullable: true
        deliveryCountry:
          type: integer
          format: int32
        deliveryZipCode:
          maxLength: 10
          minLength: 0
          type: string
        receiptCountry:
          type: integer
          format: int32
          nullable: true
        receiptZipCode:
          maxLength: 10
          minLength: 0
          type: string
        userName:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        weightChgw:
          type: number
          format: double
          nullable: true
        orderNrSl:
          type: string
          nullable: true
        orderDateSl:
          type: string
          format: date-time
          nullable: true
        baf:
          type: number
          format: double
          nullable: true
        taf:
          type: number
          format: double
          nullable: true
        inflCorrection:
          type: number
          format: double
          nullable: true
        pricingPositions:
          type: array
          items:
            "$ref": "#/components/schemas/PricingItems"
          nullable: true
      additionalProperties: false
    PricingItems:
      required:
        - height
        - length
        - quantity
        - weight
        - width
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        pricingId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        weight:
          type: integer
          format: int32
        stackability:
          type: boolean
          nullable: true
        packaging:
          type: integer
          format: int32
          nullable: true
        packagingWeight:
          type: number
          format: double
          nullable: true
        cbm:
          type: number
          format: double
          nullable: true
        ldm:
          type: number
          format: double
          nullable: true
        ldmCbm:
          type: number
          format: double
          nullable: true
        longWeight:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    PricingPostModel:
      required:
        - deliveryCountry
        - deliveryZipCode
        - receiptZipCode
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        guid:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        additionalService:
          type: integer
          format: int32
          nullable: true
        additionalServicePrice:
          type: number
          format: double
          nullable: true
        adr:
          type: boolean
          nullable: true
        adrPrice:
          type: number
          format: double
          nullable: true
        allIn:
          type: number
          format: double
          nullable: true
        comments:
          type: string
          nullable: true
        insurance:
          type: boolean
          nullable: true
        insuranceCurrency:
          maxLength: 4
          minLength: 0
          type: string
          nullable: true
        insurancePrice:
          type: number
          format: double
          nullable: true
        insuranceValue:
          type: number
          format: double
          nullable: true
        shippingPrice:
          type: number
          format: double
          nullable: true
        ttTime:
          type: string
          nullable: true
        deliveryCountry:
          type: integer
          format: int32
        deliveryZipCode:
          maxLength: 10
          minLength: 0
          type: string
        receiptCountry:
          type: integer
          format: int32
          nullable: true
        receiptZipCode:
          maxLength: 10
          minLength: 0
          type: string
        userName:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        weightChgw:
          type: number
          format: double
          nullable: true
        orderNrSl:
          type: string
          nullable: true
        orderDateSl:
          type: string
          format: date-time
          nullable: true
        baf:
          type: number
          format: double
          nullable: true
        taf:
          type: number
          format: double
          nullable: true
        inflCorrection:
          type: number
          format: double
          nullable: true
        pricingPositions:
          type: array
          items:
            "$ref": "#/components/schemas/PricingItems"
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    RegisterModel:
      required:
        - email
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        email:
          minLength: 1
          type: string
          format: email
        password:
          minLength: 1
          type: string
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    RejectModel:
      required:
        - pricingId
        - rejectCause
      type: object
      properties:
        pricingId:
          type: integer
          format: int32
        rejectCause:
          minLength: 1
          type: string
      additionalProperties: false
    Response:
      type: object
      properties:
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    Services:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    SlOrderModel:
      required:
        - deliveryAddress
        - deliveryCity
        - deliveryCityZipCode
        - deliveryCountry
        - deliveryStreet
        - pricingId
        - receiptAddress
        - receiptCity
        - receiptCityZipCode
        - receiptStreet
      type: object
      properties:
        pricingId:
          type: integer
          format: int32
        receiptAddress:
          maxLength: 256
          minLength: 0
          type: string
        receiptCity:
          maxLength: 50
          minLength: 0
          type: string
        receiptStreet:
          maxLength: 50
          minLength: 0
          type: string
        receiptCityZipCode:
          maxLength: 10
          minLength: 0
          type: string
        deliveryAddress:
          maxLength: 256
          minLength: 0
          type: string
        deliveryCity:
          maxLength: 50
          minLength: 0
          type: string
        deliveryCountry:
          maxLength: 3
          minLength: 0
          type: string
        deliveryStreet:
          maxLength: 50
          minLength: 0
          type: string
        deliveryCityZipCode:
          maxLength: 10
          minLength: 0
          type: string
      additionalProperties: false
    Statuses:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    TokenModel:
      required:
        - accessToken
        - refreshToken
      type: object
      properties:
        accessToken:
          minLength: 1
          type: string
        refreshToken:
          minLength: 1
          type: string
      additionalProperties: false
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
        expiration:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
